plugins {
    id 'java'
    id 'idea'
    id 'maven-publish'
    id 'dev.architectury.loom'
}

base {
    archivesName = "${mod_name}-neoforge-${minecraft_version}"
}

loom {
    accessWidenerPath = project(":common").loom.accessWidenerPath

    runs {
        client {
            client()
            setConfigName("NeoForge Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("NeoForge Server")
            ideConfigGenerated(true)
            runDir("run")
        }
        datagen {
            data()
            setConfigName("NeoForge Datagen")
            programArgs("--mod", "${mod_id}", "--all", "--output", file("src/generated/resources").absolutePath)
            ideConfigGenerated(true)
            runDir("run")
        }
    }
}

sourceSets.main.resources.srcDir 'src/generated/resources'

repositories {
    maven {
        name = "Sinytra"
        url = "https://maven.su5ed.dev/releases"
    }
    maven {
        name = 'NeoForged'
        url = 'https://maven.neoforged.net/releases'
    }
    mavenLocal()
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    neoForge "net.neoforged:neoforge:${neoforge_version}"
    mappings loom.officialMojangMappings()

    modImplementation "org.sinytra.forgified-fabric-api:forgified-fabric-api:${forgified_fabric_version}"

    compileOnly project(":common")
}

tasks.withType(JavaCompile).configureEach {
    source(project(":common").sourceSets.main.allSource)
}
tasks.withType(Javadoc).configureEach {
    source(project(":common").sourceSets.main.allJava)
}
tasks.named("sourcesJar", Jar) {
    from(project(":common").sourceSets.main.allSource)
}

processResources {
    from project(":common").sourceSets.main.resources
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId base.archivesName.get()
            from components.java
        }
    }
    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}
